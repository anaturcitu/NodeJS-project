// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())

  // Relationships
  posts    Post[]
  comments Comment[]
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())

  // Relationships
  author   User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int
  comments Comment[] 
  tags     Tag[]
  images   Image[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())

  // Relationships
  author   User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int
  post     Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   Int
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String

  // Relationships
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
}

model Image {
  id        Int    @id @default(autoincrement())
  url       String
  createdAt DateTime  @default(now())

  // Relationships
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    Int
}
